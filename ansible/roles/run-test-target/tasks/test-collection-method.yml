---
#
# This will run the steps for integration testing, for a given collection method.
# and handles creating the report and writing necessary log files.
#
# Args:
#   collection_method: ebpf
#

- set_fact:
    logs_root: "{{ collector_root }}/integration-tests/container-logs/{{ vm_config }}/{{ collection_method }}"

- name: Cleanup old containers
  become: "{{ runtime_as_root }}"
  shell: "{{ runtime_command }} rm -f $({{ runtime_command }} ps -aq) >/dev/null 2>&1 || true"

- set_fact:
    run_args: -test.run {{ collector_test }} -test.timeout 60m -test.count=1
  when: collector_test != "ci-integration-tests"

- set_fact:
    run_args: -test.timeout 120m
  when: collector_test == "ci-integration-tests"

- block:
  - name: Run integration tests
    shell: |
      /tmp/collector-testing/collector-tests {{ run_args }} -test.v 2>&1
    args:
      chdir: /tmp/collector-testing/
    environment:
      COLLECTION_METHOD: "{{ collection_method }}"
      VM_CONFIG: "{{ vm_config }}"
      IMAGE_FAMILY: "{{ vm_image_family }}"
      RUNTIME_COMMAND: "{{ runtime_command }}"
      RUNTIME_AS_ROOT: "{{ runtime_as_root }}"
      RUNTIME_SOCKET: "{{ runtime_socket }}"
      COLLECTOR_IMAGE: "quay.io/rhacs-eng/collector:3.15.0"
      COLLECTOR_QA_TAG: "{{ lookup('file', collector_root + '/integration-tests/container/QA_TAG') }}"
    register: test_result
    # ensure that this is printed
    tags: [print_action]

  rescue:
  - name: Set tests as failed
    set_fact:
      success: false

  - name: Output integration test log
    debug:
      msg: "{{ test_result.stdout }}"
    tags: [print_action]

  always:
  - name: Write integration test log
    copy:
      content: "{{ test_result.stdout }}"
      dest: "{{ logs_root }}/integration-test.log"
    delegate_to: localhost

  - name: Report
    shell: "make -C {{ collector_root }}/integration-tests report"
    environment:
      LOG_FILE: "{{ logs_root }}/integration-test.log"
    delegate_to: localhost

  # If this host is just for a certain collection method, skip running
  # the test if we're not using that collection method.
  when: vm_collection_method == collection_method or vm_collection_method == 'any'
